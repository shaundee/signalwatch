[ { "schema_inventory": "{\n \"funcs\": [\n {\n \"def\": \"CREATE OR REPLACE FUNCTION public.calc_vat_boxes(p_shop_domain text, p_from date, p_to date)\\n RETURNS TABLE(vat_due_sales numeric, vat_due_acquisitions numeric, total_vat_due numeric, vat_reclaimed_curr_period numeric, net_vat_due numeric, total_value_sales_ex_vat integer, total_value_purchases_ex_vat integer, total_value_goods_supplied_ex_vat integer, total_acquisitions_ex_vat integer)\\n LANGUAGE sql\\nAS $function$\\r\\nwith o as (\\r\\n select *\\r\\n from public.v_orders_consolidated\\r\\n where shop_domain = p_shop_domain\\r\\n and created_at_src >= (p_from::timestamptz)\\r\\n and created_at_src < ((p_to + 1)::timestamptz)\\r\\n),\\r\\nsales as (\\r\\n select \\r\\n coalesce(sum(coalesce(items_tax_est,0)), 0)::numeric as vat_gross,\\r\\n coalesce(sum(coalesce(items_gross_sum,0) - coalesce(items_tax_est,0)),0)::numeric as net_gross\\r\\n from o\\r\\n),\\r\\nrefunds as (\\r\\n select \\r\\n coalesce(sum(coalesce(refund_amount_vat_guess,0)), 0)::numeric as vat_refunded,\\r\\n coalesce(sum(coalesce(refund_amount_net_guess,0)), 0)::numeric as net_refunded\\r\\n from o\\r\\n)\\r\\nselect\\r\\n -- Box 1\\r\\n round( (sales.vat_gross - refunds.vat_refunded)::numeric, 2 ) as vat_due_sales,\\r\\n -- Box 2 (MVP = 0)\\r\\n 0::numeric as vat_due_acquisitions,\\r\\n -- Box 3\\r\\n round( (sales.vat_gross - refunds.vat_refunded)::numeric, 2 ) as total_vat_due,\\r\\n -- Box 4 (MVP = 0)\\r\\n 0::numeric as vat_reclaimed_curr_period,\\r\\n -- Box 5\\r\\n round( ((sales.vat_gross - refunds.vat_refunded) - 0)::numeric, 2 ) as net_vat_due,\\r\\n -- Box 6 (whole pounds — truncate, not round)\\r\\n trunc( (sales.net_gross - refunds.net_refunded) )::int as total_value_sales_ex_vat,\\r\\n -- Box 7–9 (MVP = 0)\\r\\n 0::int as total_value_purchases_ex_vat,\\r\\n 0::int as total_value_goods_supplied_ex_vat,\\r\\n 0::int as total_acquisitions_ex_vat\\r\\nfrom sales, refunds;\\r\\n$function$\\n\",\n \"args\": \"p_shop_domain text, p_from date, p_to date\",\n \"name\": \"calc_vat_boxes\"\n },\n {\n \"def\": \"CREATE OR REPLACE FUNCTION public.fn_lower_shop()\\n RETURNS trigger\\n LANGUAGE plpgsql\\nAS $function$\\r\\nbegin\\r\\n new.shop_domain := lower(new.shop_domain);\\r\\n return new;\\r\\nend$function$\\n\",\n \"args\": \"\",\n \"name\": \"fn_lower_shop\"\n },\n {\n \"def\": \"CREATE OR REPLACE FUNCTION public.insert_order(p_shop_domain text, p_shopify_order_id text, p_order_number text, p_created_at_src timestamp with time zone, p_subtotal numeric, p_vat numeric, p_gross numeric, p_ship_country text, p_currency text DEFAULT 'GBP'::text, p_raw jsonb DEFAULT '{}'::jsonb)\\n RETURNS uuid\\n LANGUAGE plpgsql\\nAS $function$\\r\\ndeclare\\r\\n v_id uuid;\\r\\nbegin\\r\\n -- sanity\\r\\n if coalesce(p_shop_domain,'') = '' then\\r\\n raise exception 'shop_domain is required';\\r\\n end if;\\r\\n if coalesce(p_shopify_order_id,'') = '' then\\r\\n raise exception 'shopify_order_id is required';\\r\\n end if;\\r\\n\\r\\n insert into public.orders as o (\\r\\n shop_domain,\\r\\n shopify_order_id,\\r\\n order_number,\\r\\n currency,\\r\\n created_at_src,\\r\\n subtotal_price,\\r\\n total_tax,\\r\\n total_price,\\r\\n shipping_country,\\r\\n raw\\r\\n )\\r\\n values (\\r\\n lower(p_shop_domain),\\r\\n p_shopify_order_id,\\r\\n p_order_number,\\r\\n p_currency,\\r\\n p_created_at_src,\\r\\n coalesce(p_subtotal, 0),\\r\\n coalesce(p_vat, 0),\\r\\n coalesce(p_gross, 0),\\r\\n p_ship_country,\\r\\n coalesce(p_raw, '{}'::jsonb)\\r\\n )\\r\\n on conflict (shop_domain, shopify_order_id)\\r\\n do update set\\r\\n order_number = excluded.order_number,\\r\\n currency = excluded.currency,\\r\\n created_at_src = excluded.created_at_src,\\r\\n subtotal_price = excluded.subtotal_price,\\r\\n total_tax = excluded.total_tax,\\r\\n total_price = excluded.total_price,\\r\\n shipping_country = excluded.shipping_country,\\r\\n raw = excluded.raw\\r\\n returning o.id into v_id;\\r\\n\\r\\n return v_id;\\r\\nend\\r\\n$function$\\n\",\n \"args\": \"p_shop_domain text, p_shopify_order_id text, p_order_number text, p_created_at_src timestamp with time zone, p_subtotal numeric, p_vat numeric, p_gross numeric, p_ship_country text, p_currency text DEFAULT 'GBP'::text, p_raw jsonb DEFAULT '{}'::jsonb\",\n \"name\": \"insert_order\"\n },\n {\n \"def\": \"CREATE OR REPLACE FUNCTION public.insert_order(p_shop_domain text, p_shopify_order_id text, p_order_number text, p_created_at_src timestamp with time zone, p_subtotal numeric, p_vat numeric, p_gross numeric, p_ship_country text, p_currency text DEFAULT 'GBP'::text, p_shop_id uuid DEFAULT NULL::uuid)\\n RETURNS uuid\\n LANGUAGE plpgsql\\nAS $function$\\r\\ndeclare\\r\\n v_id uuid;\\r\\nbegin\\r\\n -- Basic sanity checks (optional)\\r\\n if p_shop_domain is null or p_shop_domain = '' then\\r\\n raise exception 'shop_domain is required';\\r\\n end if;\\r\\n if p_shopify_order_id is null or p_shopify_order_id = '' then\\r\\n raise exception 'shopify_order_id is required';\\r\\n end if;\\r\\n\\r\\n insert into public.orders as o (\\r\\n shop_domain,\\r\\n shop_id,\\r\\n shopify_order_id,\\r\\n order_number,\\r\\n currency,\\r\\n created_at_src,\\r\\n subtotal_price,\\r\\n total_tax,\\r\\n total_price,\\r\\n shipping_country,\\r\\n raw\\r\\n )\\r\\n values (\\r\\n p_shop_domain,\\r\\n p_shop_id,\\r\\n p_shopify_order_id,\\r\\n p_order_number,\\r\\n p_currency,\\r\\n p_created_at_src,\\r\\n coalesce(p_subtotal, 0),\\r\\n coalesce(p_vat, 0),\\r\\n coalesce(p_gross, 0),\\r\\n p_ship_country,\\r\\n '{}'::jsonb\\r\\n )\\r\\n on conflict (shopify_order_id)\\r\\n do update set\\r\\n shop_domain = excluded.shop_domain,\\r\\n shop_id = excluded.shop_id,\\r\\n order_number = excluded.order_number,\\r\\n currency = excluded.currency,\\r\\n created_at_src = excluded.created_at_src,\\r\\n subtotal_price = excluded.subtotal_price,\\r\\n total_tax = excluded.total_tax,\\r\\n total_price = excluded.total_price,\\r\\n shipping_country = excluded.shipping_country\\r\\n returning o.id into v_id;\\r\\n\\r\\n return v_id;\\r\\nend\\r\\n$function$\\n\",\n \"args\": \"p_shop_domain text, p_shopify_order_id text, p_order_number text, p_created_at_src timestamp with time zone, p_subtotal numeric, p_vat numeric, p_gross numeric, p_ship_country text, p_currency text DEFAULT 'GBP'::text, p_shop_id uuid DEFAULT NULL::uuid\",\n \"name\": \"insert_order\"\n },\n {\n \"def\": \"CREATE OR REPLACE FUNCTION public.refresh_orders_mv()\\n RETURNS void\\n LANGUAGE sql\\n SECURITY DEFINER\\n SET search_path TO 'public'\\nAS $function$\\r\\n refresh materialized view concurrently public.mv_orders_consolidated;\\r\\n$function$\\n\",\n \"args\": \"\",\n \"name\": \"refresh_orders_mv\"\n },\n {\n \"def\": \"CREATE OR REPLACE FUNCTION public.set_updated_at()\\n RETURNS trigger\\n LANGUAGE plpgsql\\nAS $function$\\r\\nbegin\\r\\n new.updated_at := now();\\r\\n return new;\\r\\nend$function$\\n\",\n \"args\": \"\",\n \"name\": \"set_updated_at\"\n }\n ],\n \"views\": [\n {\n \"name\": \"mv_orders_consolidated\",\n \"definition\": \" SELECT shop_domain,\\n order_id,\\n shopify_order_id,\\n order_number,\\n currency,\\n created_at,\\n created_at_src,\\n updated_at_src,\\n customer_email,\\n shipping_country,\\n subtotal_price,\\n total_tax,\\n total_price,\\n line_count,\\n items_qty,\\n items_net_sum,\\n items_gross_sum,\\n items_tax_est,\\n refund_count,\\n refund_amount_net_guess,\\n refund_amount_vat_guess,\\n has_refund,\\n lines_json,\\n raw\\n FROM v_orders_consolidated;\"\n },\n {\n \"name\": \"v_order_line_summaries\",\n \"definition\": \" SELECT order_id,\\n count(*) AS line_count,\\n COALESCE(sum(quantity), 0::bigint) AS items_qty,\\n COALESCE(sum(price), 0::numeric) AS items_net_sum,\\n COALESCE(sum(total), 0::numeric) AS items_gross_sum,\\n COALESCE(sum(total - price * quantity::numeric), 0::numeric) AS items_tax_est\\n FROM order_lines ol\\n GROUP BY order_id;\"\n },\n {\n \"name\": \"v_order_lines_json\",\n \"definition\": \" SELECT order_id,\\n jsonb_agg(jsonb_build_object('id', id, 'sku', sku, 'title', title, 'quantity', quantity, 'price', price, 'total', total, 'tax_rate', tax_rate) ORDER BY id) AS lines_json\\n FROM order_lines ol\\n GROUP BY order_id;\"\n },\n {\n \"name\": \"v_orders_consolidated\",\n \"definition\": \" SELECT o.shop_domain,\\n o.id AS order_id,\\n o.shopify_order_id,\\n o.order_number,\\n o.currency,\\n o.created_at,\\n o.created_at_src,\\n o.updated_at_src,\\n o.customer_email,\\n o.shipping_country,\\n o.subtotal_price,\\n o.total_tax,\\n o.total_price,\\n ls.line_count,\\n ls.items_qty,\\n ls.items_net_sum,\\n ls.items_gross_sum,\\n ls.items_tax_est,\\n rs.refund_count,\\n rs.refund_amount_net_guess,\\n rs.refund_amount_vat_guess,\\n COALESCE(rs.refund_count, 0::bigint) > 0 AS has_refund,\\n lj.lines_json,\\n o.raw\\n FROM orders o\\n LEFT JOIN v_order_line_summaries ls ON ls.order_id = o.id\\n LEFT JOIN v_refund_summaries rs ON rs.order_id = o.id\\n LEFT JOIN v_order_lines_json lj ON lj.order_id = o.id;\"\n },\n {\n \"name\": \"v_refund_summaries\",\n \"definition\": \" SELECT r.order_id,\\n count(*) AS refund_count,\\n COALESCE(sum(\\n CASE\\n WHEN (tx.tx ->> 'amount'::text) ~ '^-?\\\\\\\\d+(\\\\\\\\.\\\\\\\\d+)?$'::text THEN (tx.tx ->> 'amount'::text)::numeric\\n ELSE NULL::numeric\\n END), 0::numeric) AS refund_amount_net_guess,\\n COALESCE(sum(\\n CASE\\n WHEN ((tx.tx -> 'receipt'::text) ->> 'tax'::text) ~ '^-?\\\\\\\\d+(\\\\\\\\.\\\\\\\\d+)?$'::text THEN ((tx.tx -> 'receipt'::text) ->> 'tax'::text)::numeric\\n ELSE NULL::numeric\\n END), 0::numeric) AS refund_amount_vat_guess\\n FROM refunds r\\n LEFT JOIN LATERAL jsonb_array_elements(r.transactions) tx(tx) ON true\\n GROUP BY r.order_id;\"\n }\n ],\n \"tables\": [\n {\n \"name\": \"hmrc_obligations\",\n \"columns\": [\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"vrn\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"period_key\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"start_date\",\n \"type\": \"date\",\n \"not_null\": false\n },\n {\n \"name\": \"end_date\",\n \"type\": \"date\",\n \"not_null\": false\n },\n {\n \"name\": \"due\",\n \"type\": \"date\",\n \"not_null\": false\n },\n {\n \"name\": \"status\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"received\",\n \"type\": \"date\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"received_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n },\n {\n \"name\": \"updated_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"hmrc_receipts\",\n \"columns\": [\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"vrn\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"period_key\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"body\",\n \"type\": \"jsonb\",\n \"not_null\": true\n },\n {\n \"name\": \"receipt\",\n \"type\": \"jsonb\",\n \"not_null\": true\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"updated_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"hmrc_returns\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"vrn\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"period_key\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"status\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"submitted_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"boxes_json\",\n \"type\": \"jsonb\",\n \"not_null\": true\n },\n {\n \"name\": \"hmrc_receipt_json\",\n \"type\": \"jsonb\",\n \"not_null\": true\n }\n ]\n },\n {\n \"name\": \"hmrc_tokens\",\n \"columns\": [\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"vrn\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"access_token\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"refresh_token\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"scope\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"token_type\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"expires_in\",\n \"type\": \"integer\",\n \"not_null\": true\n },\n {\n \"name\": \"expires_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"updated_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n }\n ]\n },\n {\n \"name\": \"order_items\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"order_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"title\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"variant\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"quantity\",\n \"type\": \"integer\",\n \"not_null\": true\n },\n {\n \"name\": \"net_amount\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": true\n },\n {\n \"name\": \"vat_amount\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": true\n },\n {\n \"name\": \"vat_rate\",\n \"type\": \"numeric(5,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"raw\",\n \"type\": \"jsonb\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"order_lines\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"order_id\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"shop_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"line_type\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"sku\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"title\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"quantity\",\n \"type\": \"integer\",\n \"not_null\": false\n },\n {\n \"name\": \"price\",\n \"type\": \"numeric\",\n \"not_null\": false\n },\n {\n \"name\": \"total\",\n \"type\": \"numeric\",\n \"not_null\": false\n },\n {\n \"name\": \"tax_rate\",\n \"type\": \"numeric\",\n \"not_null\": false\n },\n {\n \"name\": \"tax_lines\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"raw\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"shopify_line_id\",\n \"type\": \"text\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"orders\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"shop_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"order_number\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"currency\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at_src\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n },\n {\n \"name\": \"updated_at_src\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n },\n {\n \"name\": \"subtotal_price\",\n \"type\": \"numeric\",\n \"not_null\": false\n },\n {\n \"name\": \"total_tax\",\n \"type\": \"numeric\",\n \"not_null\": false\n },\n {\n \"name\": \"total_price\",\n \"type\": \"numeric\",\n \"not_null\": false\n },\n {\n \"name\": \"customer_email\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"shipping_country\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"raw\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"shopify_order_id\",\n \"type\": \"text\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"refund_items\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"refund_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"order_item_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"quantity\",\n \"type\": \"integer\",\n \"not_null\": true\n },\n {\n \"name\": \"net_amount\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": true\n },\n {\n \"name\": \"vat_amount\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": true\n },\n {\n \"name\": \"raw\",\n \"type\": \"jsonb\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"refunds\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"order_id\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"shop_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at_src\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n },\n {\n \"name\": \"note\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"transactions\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"refund_line_items\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"raw\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"shopify_refund_id\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"shopify_order_id\",\n \"type\": \"text\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"shop\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"owner_user_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"domain\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"access_token\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"raw\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n }\n ]\n },\n {\n \"name\": \"shops\",\n \"columns\": [\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"vrn\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"access_token\",\n \"type\": \"text\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"stripe_billing\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"email\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"stripe_customer_id\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"stripe_subscription_id\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"status\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"plan\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"price_id\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"current_period_end\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n },\n {\n \"name\": \"metadata\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"updated_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n },\n {\n \"name\": \"user_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"stripe_events\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"received_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"trial_cards\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"card_fingerprint\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"first_user_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"first_email\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"first_customer_id\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"vat_lines\",\n \"columns\": [\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"order_id\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"source_id\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"source\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"sku\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"title\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"quantity\",\n \"type\": \"integer\",\n \"not_null\": true\n },\n {\n \"name\": \"rate_pct\",\n \"type\": \"numeric\",\n \"not_null\": true\n },\n {\n \"name\": \"vat_scheme\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"net_pennies\",\n \"type\": \"bigint\",\n \"not_null\": true\n },\n {\n \"name\": \"vat_pennies\",\n \"type\": \"bigint\",\n \"not_null\": true\n },\n {\n \"name\": \"gross_pennies\",\n \"type\": \"bigint\",\n \"not_null\": true\n },\n {\n \"name\": \"currency\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"country_of_supply\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"notes\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n }\n ]\n },\n {\n \"name\": \"vat_orders\",\n \"columns\": [\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"order_id\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"currency\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"taxes_included\",\n \"type\": \"boolean\",\n \"not_null\": true\n },\n {\n \"name\": \"net_pennies\",\n \"type\": \"bigint\",\n \"not_null\": true\n },\n {\n \"name\": \"vat_pennies\",\n \"type\": \"bigint\",\n \"not_null\": true\n },\n {\n \"name\": \"gross_pennies\",\n \"type\": \"bigint\",\n \"not_null\": true\n },\n {\n \"name\": \"uk_box1_vat_pennies\",\n \"type\": \"bigint\",\n \"not_null\": true\n },\n {\n \"name\": \"uk_box6_value_pounds\",\n \"type\": \"bigint\",\n \"not_null\": true\n },\n {\n \"name\": \"raw_order\",\n \"type\": \"jsonb\",\n \"not_null\": true\n },\n {\n \"name\": \"computed_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n }\n ]\n },\n {\n \"name\": \"vat_returns\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"user_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"period_start\",\n \"type\": \"date\",\n \"not_null\": false\n },\n {\n \"name\": \"period_end\",\n \"type\": \"date\",\n \"not_null\": false\n },\n {\n \"name\": \"box1_vat_due\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"box4_vat_reclaimed\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"box6_net_sales\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"box7_net_purchases\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"summary\",\n \"type\": \"jsonb\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"vat_rules\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"user_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"shipping_follows_goods\",\n \"type\": \"boolean\",\n \"not_null\": false\n },\n {\n \"name\": \"shipping_default_rate\",\n \"type\": \"numeric(5,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"export_zero_rate\",\n \"type\": \"boolean\",\n \"not_null\": false\n },\n {\n \"name\": \"updated_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n }\n ]\n },\n {\n \"name\": \"vat_txns\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"shop_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"order_id\",\n \"type\": \"uuid\",\n \"not_null\": false\n },\n {\n \"name\": \"direction\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"net\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"vat\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"gross\",\n \"type\": \"numeric(12,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"rate\",\n \"type\": \"numeric(5,2)\",\n \"not_null\": false\n },\n {\n \"name\": \"country_code\",\n \"type\": \"text\",\n \"not_null\": false\n },\n {\n \"name\": \"created_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": true\n }\n ]\n },\n {\n \"name\": \"webhook_events\",\n \"columns\": [\n {\n \"name\": \"id\",\n \"type\": \"uuid\",\n \"not_null\": true\n },\n {\n \"name\": \"shop_domain\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"topic\",\n \"type\": \"text\",\n \"not_null\": true\n },\n {\n \"name\": \"payload\",\n \"type\": \"jsonb\",\n \"not_null\": true\n },\n {\n \"name\": \"received_at\",\n \"type\": \"timestamp with time zone\",\n \"not_null\": false\n }\n ]\n }\n ],\n \"policies\": [\n {\n \"cmd\": \"ALL\",\n \"name\": \"hmrc_obligations_all\",\n \"qual\": \"true\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"hmrc_obligations\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"true\"\n },\n {\n \"cmd\": \"ALL\",\n \"name\": \"hmrc_receipts_all\",\n \"qual\": \"true\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"hmrc_receipts\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"true\"\n },\n {\n \"cmd\": \"ALL\",\n \"name\": \"hmrc_tokens_all\",\n \"qual\": \"true\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"hmrc_tokens\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"true\"\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"hmrc_tokens_select_all\",\n \"qual\": \"true\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"hmrc_tokens\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"UPDATE\",\n \"name\": \"hmrc_tokens_update_all\",\n \"qual\": \"true\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"hmrc_tokens\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"INSERT\",\n \"name\": \"hmrc_tokens_upsert_all\",\n \"qual\": null,\n \"roles\": [\n \"public\"\n ],\n \"table\": \"hmrc_tokens\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"true\"\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"order_lines owner read\",\n \"qual\": \"(EXISTS ( SELECT 1\\n FROM (orders o\\n JOIN shop s ON ((s.id = o.shop_id)))\\n WHERE ((o.id = order_lines.order_id) AND (s.owner_user_id = auth.uid()))))\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"order_lines\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"orders owner read\",\n \"qual\": \"(EXISTS ( SELECT 1\\n FROM shop s\\n WHERE ((s.id = orders.shop_id) AND (s.owner_user_id = auth.uid()))))\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"orders\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"refunds owner read\",\n \"qual\": \"(EXISTS ( SELECT 1\\n FROM (orders o\\n JOIN shop s ON ((s.id = o.shop_id)))\\n WHERE ((o.id = refunds.order_id) AND (s.owner_user_id = auth.uid()))))\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"refunds\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"ALL\",\n \"name\": \"owner owns shop\",\n \"qual\": \"(auth.uid() = owner_user_id)\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"shop\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"(auth.uid() = owner_user_id)\"\n },\n {\n \"cmd\": \"ALL\",\n \"name\": \"shop_service_all\",\n \"qual\": \"true\",\n \"roles\": [\n \"service_role\"\n ],\n \"table\": \"shop\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"true\"\n },\n {\n \"cmd\": \"INSERT\",\n \"name\": \"shops_insert_all\",\n \"qual\": null,\n \"roles\": [\n \"public\"\n ],\n \"table\": \"shops\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"true\"\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"shops_select_all\",\n \"qual\": \"true\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"shops\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"UPDATE\",\n \"name\": \"shops_update_all\",\n \"qual\": \"true\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"shops\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"ALL\",\n \"name\": \"Service role full access (stripe_billing)\",\n \"qual\": \"true\",\n \"roles\": [\n \"service_role\"\n ],\n \"table\": \"stripe_billing\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"true\"\n },\n {\n \"cmd\": \"INSERT\",\n \"name\": \"Users can insert their stripe_billing\",\n \"qual\": null,\n \"roles\": [\n \"authenticated\"\n ],\n \"table\": \"stripe_billing\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"(auth.uid() = user_id)\"\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"Users can read their row\",\n \"qual\": \"(auth.uid() = user_id)\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"stripe_billing\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"Users can read their stripe_billing\",\n \"qual\": \"(auth.uid() = user_id)\",\n \"roles\": [\n \"authenticated\"\n ],\n \"table\": \"stripe_billing\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"UPDATE\",\n \"name\": \"Users can update their stripe_billing\",\n \"qual\": \"(auth.uid() = user_id)\",\n \"roles\": [\n \"authenticated\"\n ],\n \"table\": \"stripe_billing\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"(auth.uid() = user_id)\"\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"read own billing row\",\n \"qual\": \"(auth.uid() = user_id)\",\n \"roles\": [\n \"authenticated\"\n ],\n \"table\": \"stripe_billing\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"ALL\",\n \"name\": \"service role full access\",\n \"qual\": \"true\",\n \"roles\": [\n \"service_role\"\n ],\n \"table\": \"stripe_billing\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": \"true\"\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"users can read their billing\",\n \"qual\": \"(auth.uid() = user_id)\",\n \"roles\": [\n \"authenticated\"\n ],\n \"table\": \"stripe_billing\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n },\n {\n \"cmd\": \"SELECT\",\n \"name\": \"vat_txns owner read\",\n \"qual\": \"(EXISTS ( SELECT 1\\n FROM shop s\\n WHERE ((s.id = vat_txns.shop_id) AND (s.owner_user_id = auth.uid()))))\",\n \"roles\": [\n \"public\"\n ],\n \"table\": \"vat_txns\",\n \"permissive\": \"PERMISSIVE\",\n \"with_check\": null\n }\n ]\n}" } ]